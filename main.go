package main

import (
	"encoding/json"
	"fmt"
	"io/ioutil"
	"net/http"
	"os"
	"regexp"
	"strings"
)

type AutoGenerated struct {
	Aid       int    `json:"aid"`
	Bvid      string `json:"bvid"`
	P         int    `json:"p"`
	Episode   string `json:"episode"`
	VideoData struct {
		Bvid      string `json:"bvid"`
		Aid       int    `json:"aid"`
		Videos    int    `json:"videos"`
		Tid       int    `json:"tid"`
		Tname     string `json:"tname"`
		Copyright int    `json:"copyright"`
		Pic       string `json:"pic"`
		Title     string `json:"title"`
		Pubdate   int    `json:"pubdate"`
		Ctime     int    `json:"ctime"`
		Desc      string `json:"desc"`
		DescV2    []struct {
			RawText string `json:"raw_text"`
			Type    int    `json:"type"`
			BizID   int    `json:"biz_id"`
		} `json:"desc_v2"`
		State    int `json:"state"`
		Duration int `json:"duration"`
		Rights   struct {
			Bp            int `json:"bp"`
			Elec          int `json:"elec"`
			Download      int `json:"download"`
			Movie         int `json:"movie"`
			Pay           int `json:"pay"`
			Hd5           int `json:"hd5"`
			NoReprint     int `json:"no_reprint"`
			Autoplay      int `json:"autoplay"`
			UgcPay        int `json:"ugc_pay"`
			IsCooperation int `json:"is_cooperation"`
			UgcPayPreview int `json:"ugc_pay_preview"`
			NoBackground  int `json:"no_background"`
			CleanMode     int `json:"clean_mode"`
			IsSteinGate   int `json:"is_stein_gate"`
			Is360         int `json:"is_360"`
			NoShare       int `json:"no_share"`
			ArcPay        int `json:"arc_pay"`
			FreeWatch     int `json:"free_watch"`
		} `json:"rights"`
		Owner struct {
			Mid  int    `json:"mid"`
			Name string `json:"name"`
			Face string `json:"face"`
		} `json:"owner"`
		Stat struct {
			Aid        int    `json:"aid"`
			View       int    `json:"view"`
			Danmaku    int    `json:"danmaku"`
			Reply      int    `json:"reply"`
			Favorite   int    `json:"favorite"`
			Coin       int    `json:"coin"`
			Share      int    `json:"share"`
			NowRank    int    `json:"now_rank"`
			HisRank    int    `json:"his_rank"`
			Like       int    `json:"like"`
			Dislike    int    `json:"dislike"`
			Evaluation string `json:"evaluation"`
			ArgueMsg   string `json:"argue_msg"`
			Viewseo    int    `json:"viewseo"`
		} `json:"stat"`
		Dynamic   string `json:"dynamic"`
		Cid       int    `json:"cid"`
		Dimension struct {
			Width  int `json:"width"`
			Height int `json:"height"`
			Rotate int `json:"rotate"`
		} `json:"dimension"`
		Premiere           interface{} `json:"premiere"`
		TeenageMode        int         `json:"teenage_mode"`
		IsChargeableSeason bool        `json:"is_chargeable_season"`
		IsStory            bool        `json:"is_story"`
		NoCache            bool        `json:"no_cache"`
		Pages              []struct {
			Cid       int    `json:"cid"`
			Page      int    `json:"page"`
			From      string `json:"from"`
			Part      string `json:"part"`
			Duration  int    `json:"duration"`
			Vid       string `json:"vid"`
			Weblink   string `json:"weblink"`
			Dimension struct {
				Width  int `json:"width"`
				Height int `json:"height"`
				Rotate int `json:"rotate"`
			} `json:"dimension"`
			FirstFrame string `json:"first_frame,omitempty"`
		} `json:"pages"`
		Subtitle struct {
			AllowSubmit bool `json:"allow_submit"`
			List        []struct {
				ID          int64  `json:"id"`
				Lan         string `json:"lan"`
				LanDoc      string `json:"lan_doc"`
				IsLock      bool   `json:"is_lock"`
				SubtitleURL string `json:"subtitle_url"`
				Type        int    `json:"type"`
				IDStr       string `json:"id_str"`
				AiType      int    `json:"ai_type"`
				AiStatus    int    `json:"ai_status"`
				Author      struct {
					Mid            int    `json:"mid"`
					Name           string `json:"name"`
					Sex            string `json:"sex"`
					Face           string `json:"face"`
					Sign           string `json:"sign"`
					Rank           int    `json:"rank"`
					Birthday       int    `json:"birthday"`
					IsFakeAccount  int    `json:"is_fake_account"`
					IsDeleted      int    `json:"is_deleted"`
					InRegAudit     int    `json:"in_reg_audit"`
					IsSeniorMember int    `json:"is_senior_member"`
				} `json:"author"`
			} `json:"list"`
		} `json:"subtitle"`
		IsSeasonDisplay bool `json:"is_season_display"`
		UserGarb        struct {
			URLImageAniCut string `json:"url_image_ani_cut"`
		} `json:"user_garb"`
		HonorReply struct {
		} `json:"honor_reply"`
		EmbedPlayer struct {
			P           int         `json:"p"`
			T           int         `json:"t"`
			FromDid     interface{} `json:"fromDid"`
			Aid         int         `json:"aid"`
			Bvid        string      `json:"bvid"`
			Cid         int         `json:"cid"`
			Vid         string      `json:"vid"`
			Vtype       string      `json:"vtype"`
			FeatureList struct {
			} `json:"featureList"`
			Stats struct {
				SpmID     string `json:"spmId"`
				SpmIDFrom string `json:"spmIdFrom"`
			} `json:"stats"`
			PageVersion int `json:"pageVersion"`
		} `json:"embedPlayer"`
	} `json:"videoData"`
	UpData struct {
		Mid         string        `json:"mid"`
		Name        string        `json:"name"`
		Approve     bool          `json:"approve"`
		Sex         string        `json:"sex"`
		Rank        string        `json:"rank"`
		Face        string        `json:"face"`
		FaceNft     int           `json:"face_nft"`
		FaceNftType int           `json:"face_nft_type"`
		DisplayRank string        `json:"DisplayRank"`
		Regtime     int           `json:"regtime"`
		Spacesta    int           `json:"spacesta"`
		Birthday    string        `json:"birthday"`
		Place       string        `json:"place"`
		Description string        `json:"description"`
		Article     int           `json:"article"`
		Attentions  []interface{} `json:"attentions"`
		Fans        int           `json:"fans"`
		Friend      int           `json:"friend"`
		Attention   int           `json:"attention"`
		Sign        string        `json:"sign"`
		LevelInfo   struct {
			CurrentLevel int `json:"current_level"`
			CurrentMin   int `json:"current_min"`
			CurrentExp   int `json:"current_exp"`
			NextExp      int `json:"next_exp"`
		} `json:"level_info"`
		Pendant struct {
			Pid               int    `json:"pid"`
			Name              string `json:"name"`
			Image             string `json:"image"`
			Expire            int    `json:"expire"`
			ImageEnhance      string `json:"image_enhance"`
			ImageEnhanceFrame string `json:"image_enhance_frame"`
		} `json:"pendant"`
		Nameplate struct {
			Nid        int    `json:"nid"`
			Name       string `json:"name"`
			Image      string `json:"image"`
			ImageSmall string `json:"image_small"`
			Level      string `json:"level"`
			Condition  string `json:"condition"`
		} `json:"nameplate"`
		Official struct {
			Role  int    `json:"role"`
			Title string `json:"title"`
			Desc  string `json:"desc"`
			Type  int    `json:"type"`
		} `json:"Official"`
		OfficialVerify struct {
			Type int    `json:"type"`
			Desc string `json:"desc"`
		} `json:"official_verify"`
		Vip struct {
			Type       int   `json:"type"`
			Status     int   `json:"status"`
			DueDate    int64 `json:"due_date"`
			VipPayType int   `json:"vip_pay_type"`
			ThemeType  int   `json:"theme_type"`
			Label      struct {
				Path                  string `json:"path"`
				Text                  string `json:"text"`
				LabelTheme            string `json:"label_theme"`
				TextColor             string `json:"text_color"`
				BgStyle               int    `json:"bg_style"`
				BgColor               string `json:"bg_color"`
				BorderColor           string `json:"border_color"`
				UseImgLabel           bool   `json:"use_img_label"`
				ImgLabelURIHans       string `json:"img_label_uri_hans"`
				ImgLabelURIHant       string `json:"img_label_uri_hant"`
				ImgLabelURIHansStatic string `json:"img_label_uri_hans_static"`
				ImgLabelURIHantStatic string `json:"img_label_uri_hant_static"`
			} `json:"label"`
			AvatarSubscript    int    `json:"avatar_subscript"`
			NicknameColor      string `json:"nickname_color"`
			Role               int    `json:"role"`
			AvatarSubscriptURL string `json:"avatar_subscript_url"`
			TvVipStatus        int    `json:"tv_vip_status"`
			TvVipPayType       int    `json:"tv_vip_pay_type"`
			VipType            int    `json:"vipType"`
			VipStatus          int    `json:"vipStatus"`
		} `json:"vip"`
		IsSeniorMember int `json:"is_senior_member"`
		ArchiveCount   int `json:"archiveCount"`
	} `json:"upData"`
	IsCollection    int           `json:"isCollection"`
	SectionsInfo    interface{}   `json:"sectionsInfo"`
	PlayedSectionID []interface{} `json:"playedSectionId"`
	Sections        []interface{} `json:"sections"`
	StaffData       []interface{} `json:"staffData"`
	Tags            []struct {
		TagID        int    `json:"tag_id"`
		TagName      string `json:"tag_name"`
		Cover        string `json:"cover"`
		HeadCover    string `json:"head_cover"`
		Content      string `json:"content"`
		ShortContent string `json:"short_content"`
		Type         int    `json:"type"`
		State        int    `json:"state"`
		Ctime        int    `json:"ctime"`
		Count        struct {
			View  int `json:"view"`
			Use   int `json:"use"`
			Atten int `json:"atten"`
		} `json:"count"`
		IsAtten         int         `json:"is_atten"`
		Likes           int         `json:"likes"`
		Hates           int         `json:"hates"`
		Attribute       int         `json:"attribute"`
		Liked           int         `json:"liked"`
		Hated           int         `json:"hated"`
		ExtraAttr       int         `json:"extra_attr"`
		MusicID         string      `json:"music_id"`
		TagType         string      `json:"tag_type"`
		IsActivity      bool        `json:"is_activity"`
		Color           string      `json:"color"`
		Alpha           int         `json:"alpha"`
		IsSeason        bool        `json:"is_season"`
		SubscribedCount int         `json:"subscribed_count"`
		ArchiveCount    string      `json:"archive_count"`
		FeaturedCount   int         `json:"featured_count"`
		JumpURL         string      `json:"jump_url"`
		ShowDetail      bool        `json:"showDetail"`
		ShowReport      bool        `json:"showReport"`
		TimeOut         interface{} `json:"timeOut"`
	} `json:"tags"`
	Related []struct {
		Aid      int    `json:"aid"`
		Cid      int    `json:"cid"`
		Bvid     string `json:"bvid"`
		Duration int    `json:"duration"`
		Pic      string `json:"pic"`
		Title    string `json:"title"`
		Owner    struct {
			Name string `json:"name"`
			Mid  int    `json:"mid"`
		} `json:"owner"`
		Stat struct {
			Danmaku int `json:"danmaku"`
			View    int `json:"view"`
		} `json:"stat"`
		SeasonID   int `json:"season_id"`
		SeasonType int `json:"season_type"`
	} `json:"related"`
	Spec struct {
		Type int `json:"type"`
		Card struct {
			ID      int    `json:"id"`
			Type    int    `json:"type"`
			Title   string `json:"title"`
			Desc    string `json:"desc"`
			Cover   string `json:"cover"`
			ReType  int    `json:"re_type"`
			ReValue string `json:"re_value"`
			Person  string `json:"person"`
			Ctime   int    `json:"ctime"`
			Mtime   int    `json:"mtime"`
		} `json:"card"`
	} `json:"spec"`
	IsClient bool `json:"isClient"`
	Error    struct {
	} `json:"error"`
	Player  string `json:"player"`
	Playurl struct {
	} `json:"playurl"`
	User struct {
	} `json:"user"`
	CidMap struct {
		Num94519857 struct {
			Aid  int    `json:"aid"`
			Bvid string `json:"bvid"`
			Cids struct {
				Num1 int `json:"1"`
			} `json:"cids"`
		} `json:"94519857"`
		BV1JE411G7XF struct {
			Aid  int    `json:"aid"`
			Bvid string `json:"bvid"`
			Cids struct {
				Num1 int `json:"1"`
			} `json:"cids"`
		} `json:"BV1JE411g7XF"`
	} `json:"cidMap"`
	IsRecAutoPlay     bool        `json:"isRecAutoPlay"`
	ContinuousPlay    bool        `json:"continuousPlay"`
	AutoPlayNextVideo interface{} `json:"autoPlayNextVideo"`
	ElecFullInfo      struct {
		Pic  string `json:"pic"`
		Show bool   `json:"show"`
	} `json:"elecFullInfo"`
	AdData struct {
		Num2624 []struct {
			ID           int         `json:"id"`
			ContractID   string      `json:"contract_id"`
			ResID        int         `json:"res_id"`
			AsgID        int         `json:"asg_id"`
			PosNum       int         `json:"pos_num"`
			Name         string      `json:"name"`
			Pic          string      `json:"pic"`
			Litpic       string      `json:"litpic"`
			URL          string      `json:"url"`
			Style        int         `json:"style"`
			Agency       string      `json:"agency"`
			Label        string      `json:"label"`
			Intro        string      `json:"intro"`
			CreativeType int         `json:"creative_type"`
			RequestID    string      `json:"request_id"`
			SrcID        int         `json:"src_id"`
			Area         int         `json:"area"`
			IsAdLoc      bool        `json:"is_ad_loc"`
			AdCb         string      `json:"ad_cb"`
			Title        string      `json:"title"`
			ServerType   int         `json:"server_type"`
			CmMark       int         `json:"cm_mark"`
			Stime        int         `json:"stime"`
			Mid          string      `json:"mid"`
			ActivityType int         `json:"activity_type"`
			Epid         int         `json:"epid"`
			Season       interface{} `json:"season"`
			Room         interface{} `json:"room"`
			SubTitle     string      `json:"sub_title"`
			AdDesc       string      `json:"ad_desc"`
			AdverName    string      `json:"adver_name"`
			NullFrame    bool        `json:"null_frame"`
			PicMainColor string      `json:"pic_main_color"`
			CardType     int         `json:"card_type"`
			BusinessMark interface{} `json:"business_mark"`
			Inline       struct {
				InlineUseSame       int    `json:"inline_use_same"`
				InlineType          int    `json:"inline_type"`
				InlineURL           string `json:"inline_url"`
				InlineBarrageSwitch int    `json:"inline_barrage_switch"`
			} `json:"inline"`
			Operater string `json:"operater"`
		} `json:"2624"`
		Num2625 []struct {
			ID           int         `json:"id"`
			ContractID   string      `json:"contract_id"`
			ResID        int         `json:"res_id"`
			AsgID        int         `json:"asg_id"`
			PosNum       int         `json:"pos_num"`
			Name         string      `json:"name"`
			Pic          string      `json:"pic"`
			Litpic       string      `json:"litpic"`
			URL          string      `json:"url"`
			Style        int         `json:"style"`
			IsAd         bool        `json:"is_ad"`
			Agency       string      `json:"agency"`
			Label        string      `json:"label"`
			Intro        string      `json:"intro"`
			CreativeType int         `json:"creative_type"`
			RequestID    string      `json:"request_id"`
			CreativeID   int64       `json:"creative_id"`
			SrcID        int         `json:"src_id"`
			Area         int         `json:"area"`
			IsAdLoc      bool        `json:"is_ad_loc"`
			AdCb         string      `json:"ad_cb"`
			Title        string      `json:"title"`
			ServerType   int         `json:"server_type"`
			CmMark       int         `json:"cm_mark"`
			Stime        int         `json:"stime"`
			Mid          string      `json:"mid"`
			ActivityType int         `json:"activity_type"`
			Epid         int         `json:"epid"`
			Season       interface{} `json:"season"`
			Room         interface{} `json:"room"`
			SubTitle     string      `json:"sub_title"`
			AdDesc       string      `json:"ad_desc"`
			AdverName    string      `json:"adver_name"`
			NullFrame    bool        `json:"null_frame"`
			PicMainColor string      `json:"pic_main_color"`
			CardType     int         `json:"card_type"`
			BusinessMark struct {
				Type          int    `json:"type"`
				Text          string `json:"text"`
				TextColor     string `json:"text_color"`
				BgBorderColor string `json:"bg_border_color"`
				BgColor       string `json:"bg_color"`
				BorderColor   string `json:"border_color"`
			} `json:"business_mark"`
			Inline struct {
				InlineUseSame       int    `json:"inline_use_same"`
				InlineType          int    `json:"inline_type"`
				InlineURL           string `json:"inline_url"`
				InlineBarrageSwitch int    `json:"inline_barrage_switch"`
			} `json:"inline"`
			Operater string `json:"operater"`
		} `json:"2625"`
		Num3038 []struct {
			ID           int         `json:"id"`
			ContractID   string      `json:"contract_id"`
			ResID        int         `json:"res_id"`
			AsgID        int         `json:"asg_id"`
			PosNum       int         `json:"pos_num"`
			Name         string      `json:"name"`
			Pic          string      `json:"pic"`
			Litpic       string      `json:"litpic"`
			URL          string      `json:"url"`
			Style        int         `json:"style"`
			Agency       string      `json:"agency"`
			Label        string      `json:"label"`
			Intro        string      `json:"intro"`
			CreativeType int         `json:"creative_type"`
			RequestID    string      `json:"request_id"`
			SrcID        int         `json:"src_id"`
			Area         int         `json:"area"`
			IsAdLoc      bool        `json:"is_ad_loc"`
			AdCb         string      `json:"ad_cb"`
			Title        string      `json:"title"`
			ServerType   int         `json:"server_type"`
			CmMark       int         `json:"cm_mark"`
			Stime        int         `json:"stime"`
			Mid          string      `json:"mid"`
			ActivityType int         `json:"activity_type"`
			Epid         int         `json:"epid"`
			Season       interface{} `json:"season"`
			Room         interface{} `json:"room"`
			SubTitle     string      `json:"sub_title"`
			AdDesc       string      `json:"ad_desc"`
			AdverName    string      `json:"adver_name"`
			NullFrame    bool        `json:"null_frame"`
			PicMainColor string      `json:"pic_main_color"`
			CardType     int         `json:"card_type"`
			BusinessMark interface{} `json:"business_mark"`
			Inline       struct {
				InlineUseSame       int    `json:"inline_use_same"`
				InlineType          int    `json:"inline_type"`
				InlineURL           string `json:"inline_url"`
				InlineBarrageSwitch int    `json:"inline_barrage_switch"`
			} `json:"inline"`
			Operater string `json:"operater"`
		} `json:"3038"`
		Num4330 []struct {
			ID           int         `json:"id"`
			ContractID   string      `json:"contract_id"`
			ResID        int         `json:"res_id"`
			AsgID        int         `json:"asg_id"`
			PosNum       int         `json:"pos_num"`
			Name         string      `json:"name"`
			Pic          string      `json:"pic"`
			Litpic       string      `json:"litpic"`
			URL          string      `json:"url"`
			Style        int         `json:"style"`
			IsAd         bool        `json:"is_ad"`
			Agency       string      `json:"agency"`
			Label        string      `json:"label"`
			Intro        string      `json:"intro"`
			CreativeType int         `json:"creative_type"`
			RequestID    string      `json:"request_id"`
			CreativeID   int         `json:"creative_id"`
			SrcID        int         `json:"src_id"`
			Area         int         `json:"area"`
			IsAdLoc      bool        `json:"is_ad_loc"`
			AdCb         string      `json:"ad_cb"`
			Title        string      `json:"title"`
			ServerType   int         `json:"server_type"`
			CmMark       int         `json:"cm_mark"`
			Stime        int         `json:"stime"`
			Mid          string      `json:"mid"`
			ActivityType int         `json:"activity_type"`
			Epid         int         `json:"epid"`
			Season       interface{} `json:"season"`
			Room         interface{} `json:"room"`
			SubTitle     string      `json:"sub_title"`
			AdDesc       string      `json:"ad_desc"`
			AdverName    string      `json:"adver_name"`
			NullFrame    bool        `json:"null_frame"`
			PicMainColor string      `json:"pic_main_color"`
			CardType     int         `json:"card_type"`
			BusinessMark struct {
				BgBorderColor    string `json:"bg_border_color"`
				BgColor          string `json:"bg_color"`
				BgColorNight     string `json:"bg_color_night"`
				BorderColor      string `json:"border_color"`
				BorderColorNight string `json:"border_color_night"`
				ImgHeight        int    `json:"img_height"`
				ImgURL           string `json:"img_url"`
				ImgWidth         int    `json:"img_width"`
				Text             string `json:"text"`
				TextColor        string `json:"text_color"`
				TextColorNight   string `json:"text_color_night"`
				Type             int    `json:"type"`
			} `json:"business_mark"`
			Inline struct {
				InlineUseSame       int    `json:"inline_use_same"`
				InlineType          int    `json:"inline_type"`
				InlineURL           string `json:"inline_url"`
				InlineBarrageSwitch int    `json:"inline_barrage_switch"`
			} `json:"inline"`
			Operater string `json:"operater"`
		} `json:"4330"`
	} `json:"adData"`
	AdsControl struct {
		HasDanmu int `json:"has_danmu"`
	} `json:"adsControl"`
	BofqiParams struct {
	} `json:"bofqiParams"`
	IsBack              bool        `json:"isBack"`
	IsForbidNote        bool        `json:"isForbidNote"`
	SeasonType          int         `json:"seasonType"`
	PremiereInfo        interface{} `json:"premiereInfo"`
	NoRecommendLive     bool        `json:"noRecommendLive"`
	NoRecommendActivity bool        `json:"noRecommendActivity"`
	IsModern            bool        `json:"isModern"`
	NoteCount           int         `json:"noteCount"`
	IsUpHasPublicNote   bool        `json:"isUpHasPublicNote"`
	PlayerReloadOrigin  string      `json:"playerReloadOrigin"`
	NanoTheme           struct {
		BpxPrimaryColor        string `json:"bpx-primary-color"`
		BpxFnColor             string `json:"bpx-fn-color"`
		BpxFnHoverColor        string `json:"bpx-fn-hover-color"`
		BpxBoxShadow           string `json:"bpx-box-shadow"`
		BpxDmsendSwitchIcon    string `json:"bpx-dmsend-switch-icon"`
		BpxDmsendHintIcon      string `json:"bpx-dmsend-hint-icon"`
		BpxAuxHeaderIcon       string `json:"bpx-aux-header-icon"`
		BpxAuxFloatIcon        string `json:"bpx-aux-float-icon"`
		BpxAuxBlockIcon        string `json:"bpx-aux-block-icon"`
		BpxDmsendInfoFont      string `json:"bpx-dmsend-info-font"`
		BpxDmsendInputFont     string `json:"bpx-dmsend-input-font"`
		BpxDmsendHintFont      string `json:"bpx-dmsend-hint-font"`
		BpxAuxHeaderFont       string `json:"bpx-aux-header-font"`
		BpxAuxFooterFont       string `json:"bpx-aux-footer-font"`
		BpxAuxFooterFontHover  string `json:"bpx-aux-footer-font-hover"`
		BpxAuxContentFont1     string `json:"bpx-aux-content-font1"`
		BpxAuxContentFont2     string `json:"bpx-aux-content-font2"`
		BpxAuxContentFont3     string `json:"bpx-aux-content-font3"`
		BpxAuxContentFont4     string `json:"bpx-aux-content-font4"`
		BpxAuxContentFont5     string `json:"bpx-aux-content-font5"`
		BpxDmsendMainBg        string `json:"bpx-dmsend-main-bg"`
		BpxDmsendInputBg       string `json:"bpx-dmsend-input-bg"`
		BpxAuxHeaderBg         string `json:"bpx-aux-header-bg"`
		BpxAuxFooterBg         string `json:"bpx-aux-footer-bg"`
		BpxAuxContentBg        string `json:"bpx-aux-content-bg"`
		BpxAuxButtonBg         string `json:"bpx-aux-button-bg"`
		BpxAuxButtonDisabledBg string `json:"bpx-aux-button-disabled-bg"`
		BpxAuxFloatBg          string `json:"bpx-aux-float-bg"`
		BpxAuxFloatHoverBg     string `json:"bpx-aux-float-hover-bg"`
		BpxAuxCoverBg          string `json:"bpx-aux-cover-bg"`
		BpxDmsendBorder        string `json:"bpx-dmsend-border"`
		BpxAuxFloatBorder      string `json:"bpx-aux-float-border"`
		BpxAuxLineBorder       string `json:"bpx-aux-line-border"`
		BpxAuxInputBorder      string `json:"bpx-aux-input-border"`
	} `json:"nanoTheme"`
	InsertScripts     []string    `json:"insertScripts"`
	PageVersion       string      `json:"pageVersion"`
	VideoGoOldVersion interface{} `json:"videoGoOldVersion"`
	IsPrVideo         bool        `json:"isPrVideo"`
	Abtest            struct {
		RemoveBackVersion string `json:"remove_back_version"`
	} `json:"abtest"`
	IsExp        bool `json:"isExp"`
	IsNewHome    bool `json:"isNewHome"`
	ReInlineNano bool `json:"reInlineNano"`
}

func crawSingleUrl(url, method string) string {
	client := &http.Client{}

	req, err := http.NewRequest(method, url, nil)
	if err != nil {
		panic(err.Error())
	}

	req.Header.Add("authority", "www.bilibili.com")
	req.Header.Add("accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9")
	req.Header.Add("accept-language", "zh-CN,zh;q=0.9")
	req.Header.Add("cache-control", "no-cache")
	req.Header.Add("cookie", "_uuid=43D02BAA-AF89-A0EC-1431-ED0EBCEBCF3889828infoc; buvid3=39E18E2C-96EF-48BF-ADD2-D55C1184486A167619infoc; b_nut=1634091990; rpdid=|(k|kY|m~Ylu0J'uYJR|mkJ|); LIVE_BUVID=AUTO8316362008528464; video_page_version=v_old_home; CURRENT_BLACKGAP=0; blackside_state=0; buvid4=6EDBAE22-C7DB-B291-B1C0-8B88A345CF5207846-022012016-R7WDlws6U28Dlc/vTb0ONw%3D%3D; CURRENT_QUALITY=80; nostalgia_conf=-1; i-wanna-go-back=-1; buvid_fp_plain=undefined; SESSDATA=a6ecf4ac%2C1666582698%2Cd4f37%2A41; bili_jct=1ab37acb5554f9fea3cbdb523aa35318; DedeUserID=387457550; DedeUserID__ckMd5=6607490eb35f89b8; sid=b2ni1lcd; buvid_fp=7c34590617755999f365f58aba6b2ba3; b_ut=5; PVID=2; fingerprint3=0675fd3b80a7d60bd57b04f322764717; fingerprint=969215c5ec57bd1fff253932d45863d1; hit-dyn-v2=1; bp_video_offset_387457550=691676175150350359; CURRENT_FNVAL=4048; theme_style=light; b_lsid=641041866_18281638065; b_timer=%7B%22ffp%22%3A%7B%22333.788.fp.risk_39E18E2C%22%3A%221828163820F%22%2C%22333.1193.fp.risk_39E18E2C%22%3A%2218281638E1A%22%7D%7D")
	req.Header.Add("pragma", "no-cache")
	req.Header.Add("sec-ch-ua", "\".Not/A)Brand\";v=\"99\", \"Google Chrome\";v=\"103\", \"Chromium\";v=\"103\"")
	req.Header.Add("sec-ch-ua-mobile", "?0")
	req.Header.Add("sec-ch-ua-platform", "\"macOS\"")
	req.Header.Add("sec-fetch-dest", "document")
	req.Header.Add("sec-fetch-mode", "navigate")
	req.Header.Add("sec-fetch-site", "same-origin")
	req.Header.Add("sec-fetch-user", "?1")
	req.Header.Add("upgrade-insecure-requests", "1")
	req.Header.Add("user-agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.0.0 Safari/537.36")

	res, err := client.Do(req)
	if err != nil {
		panic(err.Error())
	}
	defer res.Body.Close()

	body, err := ioutil.ReadAll(res.Body)
	if err != nil {
		panic(err.Error())
	}

	return string(body)
}

type Initial_state struct {
}

func downloadSingleVideo(url, outPutDir string) {

}
func main() {
	url := "https://www.bilibili.com/video/BV1JE411g7XF"
	frontUrl := strings.Split(url, "?")[0]
	outPutDir := "./videos"
	err := os.MkdirAll(outPutDir, os.ModePerm)
	if err != nil {
		panic(err.Error())
	}

	htmlStr := crawSingleUrl(frontUrl, "GET")
	re := regexp.MustCompile(`<script>window.__INITIAL_STATE__={.*?};`)
	initial_state := re.FindAllString(htmlStr, -1)[0]
	initial_state = strings.TrimLeft(initial_state, "<script>window.__INITIAL_STATE__=")
	initial_state = strings.TrimRight(initial_state, ";")
	var ag AutoGenerated
	json.Unmarshal([]byte(initial_state), &ag)
	pages := ag.VideoData.Pages
	for idx := range pages {
		video_url := fmt.Sprintf("%s?p=%d", frontUrl, idx+1)
		downloadSingleVideo(video_url, outPutDir)
	}
}
